---
title: "Bitirme Projesi"
number-sections: true
---

**Proje sayfamD1za hoE geldiniz.**

*Projemizle ilgili gC\<ncellemelerden haberdar olmak iC'in bu alanD1 takip edin.*

# Proje Genel BakD1ED1 ve KapsamD1

# VERİ

## Veri KaynaDD1

https://www.basketball-reference.com/leagues/NBA_2024_totals.html sayfasD1ndan csv formatD1 ile C'ekildi. Ancak iliEki kuracaDD1mD1z alt baElD1klardan kilo ve boy verisi bu data setinde yer almıyordu. Bu sebeple Anıl ve Burak veriyi ön işlemeye tabi tuttu.

https://www.nba.com/players sayfasD1ndan oyuncularD1n boy ve kilo verisi alD1ndı ve ana veri setine yeni bir sC\<tun olarak eklendi.

## Veri HakkD1nda Genel Bilgiler

NBA (National Basketball Association), dünya genelinde büyük bir popülerliğe sahip olan profesyonel basketbol liglerinden biridir. NBA'de yer alan takımlar, Amerika Birleşik Devletleri ve Kanada'da bulunan şehirleri temsil eder ve her sezon düzenlenen maçlar büyük bir izleyici kitlesi tarafından takip edilir.

NBA oyuncu istatistikleri ve özellikleri, ligde yer alan oyuncuların performansını değerlendirmek ve takımların başarısını analiz etmek için kullanılan önemli veri setlerinden biridir. Bu veriler, genellikle sezon boyunca her oyuncunun oynadığı maçlardaki istatistikleri içerir ve aynı zamanda oyuncuların kişisel özelliklerini de kapsar.

Oyuncu istatistikleri genellikle şunları içerir:

Skor: Oyuncunun maç başına attığı sayı. Asist: Oyuncunun maç başına yaptığı asist. Ribaund: Oyuncunun maç başına aldığı ribaund. Blok: Oyuncunun maç başına yaptığı blok. Top Çalma: Oyuncunun maç başına yaptığı top çalma. Saha İçi ve Saha Dışı Atış Yüzdeleri: Oyuncunun maç başına saha içi ve saha dışı atışlardan elde ettiği yüzde.

Bunların yanı sıra, oyuncu özellikleri de önemli bir role sahiptir. Oyuncu özellikleri genellikle şunları içerir:

Yaş: Oyuncunun yaşı. Boy: Oyuncunun boyu. Kilo: Oyuncunun kilosu. Pozisyon: Oyuncunun oynadığı pozisyon (örneğin, guard, forvet, pivot). Tecrübe: Oyuncunun ligdeki toplam tecrübesi (yıllar olarak).

NBA oyuncu istatistikleri ve özellikleri spor analizi, oyuncu performansının değerlendirilmesi ve takım stratejilerinin oluşturulmasında önemli bir rol oynar. Bu veriler, hem spor endüstrisi uzmanları hem de basketbol severler için değerli bir kaynaktır ve geniş bir analiz ve araştırma alanı sunar.

## Tercih Sebebi

NBA, dünya genelinde büyük bir popülerliğe sahip olan profesyonel bir spor ligi olduğundan, oyuncu istatistikleri ve özellikleri genellikle kapsamlı, güvenilir ve güncel veri kaynaklarına sahiptir. 2023-2024 sezonu ile filtreleyerek analizimiz için ideal bir veri seti sağladık.

NBA oyuncuları hakkında toplanan veriler, oyuncuların performansını değerlendirmek için çeşitli değişkenleri içermektedir. Skor, asist, ribaund gibi performans ölçütlerinden; oyuncunun yaşı, boyu, kilosu gibi kişisel özelliklerine kadar geniş bir veri sunmuş, bu çeşitlilik ise farklı ilişkileri inceleme fırsatını yaratmıştır.

Basketbol dünya genelinde milyonlarca insanı ilgilendiren bir spor dalıdır. Bu nedenle, geniş bir kitleye hitap edeceğini ve ilgi çekebileceğini düşündük. Bunun da projenin etkileşim ve geri bildirim potansiyelini arttırmasını umut ettik. Bu verileri kullanmak, spor analizi konusunda ilgili olan bireyler için -Aysu ve Anıl gibi- heyecan verici bir proje konusu olmuştur.

## Cn D0Eleme

BazD1 veri setleri, analize hazD1r deDildi. Veri setlerini kullanabilmek iC'in C6nce C6n iElemeye ihtiyaC' duyduk. Proje konumuz NBA oyuncularD1nD1n sezondaki C'eEitli istatististiklerine dayanD1yordu ancak hazD1r veri setleri yoktu. Bu yC\<zden NBA'in sitesinden yayD1nladD1DD1 istatistikleri projemizde kullanabilmek iC'in veri seti yani .csv formatD1nda excell dosyalarD1na C'evirdik.

https://www.nba.com/players sayfasD1ndan ise 572 oyuncunun boy, kilo verisini ana veri setine yeni kolon olarak ekledik.

# Analiz

Bu analizde NBA 2023-24 sezonundaki ilk 50'ye giren oyuncularD1n verileri kullanmD1EtD1r. D0ncelenecek alt baElD1klar aEaDD1daki gibidir:

## Su Tüketimleri - Üretim ve Ülke

```{r}


# Veri setini yukleme
veri <- read.csv(file = "datalisted.csv", head = TRUE, sep=";")

veri$Size <- as.factor(veri$Size)
veri$GR <- as.factor(veri$GR)
veri$Count <- as.factor(veri$Count)
veri$Cons <- as.factor(veri$Cons)
veri$Height <- as.factor(veri$Height)
veri$Int <- as.factor(veri$Int)
veri$Col <- as.factor(veri$Col)
veri$Dis <- as.factor(veri$Dis)
veri$Time <- as.factor(veri$Time)
veri$WtCns <- as.factor(veri$WtCns)
veri$En <- as.factor(veri$En)
veri$Cap <- as.factor(veri$Cap)
veri$Mot <- as.factor(veri$Mot)
veri$Fast <- as.factor(veri$Fast)
veri$PRG <- as.factor(veri$PRG)
veri$NOI <- as.factor(veri$NOI)
veri$Thrd <- as.factor(veri$Thrd)
veri$SLI <- as.factor(veri$SLI)
veri$AUD <- as.factor(veri$AUD)
veri$Con <- as.factor(veri$Con)

print(veri)


# veriyi Satıs sütununa göre sıralama
satis_data <- veri[order(veri$SAL, decreasing = TRUE),]

# satıs sütununa göre sıralanan veriyi alma
SatisAnaliz <- subset(satis_data, select = c("Count", "SAL", "WtCns","En","NOI"))

# ggplot2 kütüphanesini yükleme
library(ggplot2) 

# Bar grafiğini çizelim (örneğin, enerji verimliliği için)
bar=ggplot(SatisAnaliz,aes(x=SAL,y=WtCns,fill=Count))
bar+geom_bar(stat="identity")

print(bar)


```

```{r}

# Veri setini yukleme
veri <- read.csv(file = "datalisted.csv", head = TRUE, sep=";")

typeof(veri)

veri$Size <- as.factor(veri$Size)
veri$GR <- as.factor(veri$GR)
veri$Count <- as.factor(veri$Count)
veri$Cons <- as.factor(veri$Cons)
veri$Height <- as.factor(veri$Height)
veri$Int <- as.factor(veri$Int)
veri$Col <- as.factor(veri$Col)
veri$Dis <- as.factor(veri$Dis)
veri$Time <- as.factor(veri$Time)
veri$WtCns <- as.factor(veri$WtCns)
veri$En <- as.factor(veri$En)
veri$Cap <- as.factor(veri$Cap)
veri$Mot <- as.factor(veri$Mot)
veri$Fast <- as.factor(veri$Fast)
veri$PRG <- as.factor(veri$PRG)
veri$NOI <- as.factor(veri$NOI)
veri$Thrd <- as.factor(veri$Thrd)
veri$SLI <- as.factor(veri$SLI)
veri$AUD <- as.factor(veri$AUD)
veri$Con <- as.factor(veri$Con)

print(veri)

# veriyi Satıs sütununa göre sıralama
satis_data <- veri[order(veri$SAL, decreasing = TRUE),]


# satıs sütununa göre sıralanan veriyi alma
SatisAnaliz <- subset(satis_data, select = c("Count", "SAL", "WtCns","En","NOI"))

# ggplot2 kütüphanesini yükleme
library(ggplot2) 

# Bar grafiğini çizelim (örneğin, enerji verimliliği için)
bar=ggplot(SatisAnaliz,aes(x=SAL,y=WtCns,fill=Count))
bar+geom_bar(stat="identity",position="dodge")+geom_text(aes(label=WtCns),colour="black",position=position_dodge(0.9),size=3)

print(bar)


```

# Enerji Bazlı Satış Adedi Analizi 

Bu analizde NBA 2023-24 sezonundaki ilk 50'ye giren oyuncularD1n verileri kullanmD1EtD1r. D0ncelenecek alt baElD1klar aEaDD1daki gibidir:

```{r}

# Veri setini yukleme
veri <- read.csv(file = "datalisted.csv", head = TRUE, sep=";")

typeof(veri)

veri$Size <- as.factor(veri$Size)
veri$GR <- as.factor(veri$GR)
veri$Count <- as.factor(veri$Count)
veri$Cons <- as.factor(veri$Cons)
veri$Height <- as.factor(veri$Height)
veri$Int <- as.factor(veri$Int)
veri$Col <- as.factor(veri$Col)
veri$Dis <- as.factor(veri$Dis)
veri$Time <- as.factor(veri$Time)
veri$WtCns <- as.factor(veri$WtCns)
veri$En <- as.factor(veri$En)
veri$Cap <- as.factor(veri$Cap)
veri$Mot <- as.factor(veri$Mot)
veri$Fast <- as.factor(veri$Fast)
veri$PRG <- as.factor(veri$PRG)
veri$NOI <- as.factor(veri$NOI)
veri$Thrd <- as.factor(veri$Thrd)
veri$SLI <- as.factor(veri$SLI)
veri$AUD <- as.factor(veri$AUD)
veri$Con <- as.factor(veri$Con)

print(veri)

# veriyi Satıs sütununa göre sıralama
satis_data <- veri[order(veri$SAL, decreasing = TRUE),]

# satıs sütununa göre sıralanan veriyi alma
SatisAnaliz <- subset(satis_data, select = c("Count", "SAL", "WtCns","En","NOI"))

install.packages("dplyr")


# Libraries
library(ggplot2)
library(dplyr)

# Veriyi Satıs sütununa göre sıralama
satis_data <- veri %>%
  arrange(desc(SAL))

# Satıs sütununa göre sıralanan veriyi alma
SatisAnaliz <- satis_data %>%
  select(Count, SAL, WtCns, En, NOI)

# Plot
ggplot(SatisAnaliz, aes(x = En, y = SAL, fill = En)) +
  geom_boxplot() +
  geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
  theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11)
  ) +
  ggtitle("Enerji Satış Oranı Dağılımı") +
  xlab("")

```

```{r}


# Veri setini yukleme
veri <- read.csv(file = "datalisted.csv", head = TRUE, sep=";")

print(veri)

# veriyi Satıs sütununa göre sıralama
satis_data <- veri[order(veri$SAL, decreasing = TRUE),]

# satıs sütununa göre sıralanan veriyi alma
SatisAnaliz <- subset(satis_data, select = c("Count", "SAL", "WtCns","En","NOI"))

# ggplot2 kütüphanesini yükleme
library(ggplot2) 


# Scatterplot çizimi
ggplot(SatisAnaliz, aes(x = SAL,y = WtCns,color = Count)) +
  geom_point() +
  labs(title = "Ülke Su Tuketimleri",
       x = "Satis",
       y = "Su Tuketimleri") +
  theme_minimal()


```

Bu grafikte boy arttD1kC'a rebound sayD1sD1nD1n arttD1DD1nD1 gC6zlemledik. Beklenen sonuC' da buydu. Ancak grafikten C'D1karD1lmasD1 gereken bir diDer sonuC' ise 1.9 - 2.1 uzunluDundaki oyuncularD1n 60 TRB deDerinin altD1nda kalan kC\<mesi. Bu oyuncular uzun olmasD1na raDmen diDer oyunculara gC6re dC\<EC\<k performans sergilemiEler. Bir sonraki baElD1kta bu kC\<menin yaE ve kilo ile grafiDine bakD1p bunlarD1n sebep olma ihtimalini inceleyeceDiz.

## 3.2 Blok - Boy (Selin)

```{r}
# Veri setini yükleme
veri <- read.csv(file = "NBA_Dataset_yeni.csv", header = TRUE, sep = ",")

# veriyi BLK sütununa göre sıralama
blok_data <- veri[order(veri$BLK, decreasing = TRUE),]

# BLK sütununa göre sıralanan veriyi alma
blok_top <- blok_data[1:572,]
BlokAnaliz <- subset(blok_top, select = c("Player", "BLK", "Height","MP","Weight"))
colnames(BlokAnaliz) <- c("oyuncu", "blok", "boy","süre","kilo")

# boy sütununu düzgün formata çevirme
BlokAnaliz$boy <- as.numeric(gsub(",", ".", BlokAnaliz$boy))

# MP'ye göre filtreleme yapalım
filtreli_veri <- veri %>%
  filter(MP > 20)

# Filtrelenmiş veriyi ekrana yazdırın
print(filtreli_veri)

# Ortalama blok hesaplama
ortalama_blok <- mean(filtreli_veri$BLK)

# ggplot2 kütüphanesini yükleme
library(ggplot2)

# Scatterplot çizimi
ggplot(filtreli_veri, aes(x = Height, y = BLK, color=Pos)) +
  geom_point() +
  geom_abline(intercept = ortalama_blok, slope = 0, linetype = "dashed", color = "blue") +
  labs(title = "Blok Sayısı ve Boy Arasındaki İlişki",
       x = "Boy",
       y = "Blok Sayısı") +
  theme_minimal()

```

Bu analizde NBA oyuncularından 20 dakikadan fazla oyunda kalmış oyuncuların Block başarılarının boyla ilgilisi analiz edilmiştir. Renkler pozisyonları göstermektedir. PF-Pivot oyuncuyu göstermektedir.

Boy ile Blok sayısı arasındaki bağlantıyı grafik üzerinden değerlendirdiğimizde

-   Boyu 1.95 ile 2.05 arasında olan oyuncuların blok sayıları benzerdir.

-   Blok sayısı 1.5 ve üzerine olan oyuncuların hepsi 2 metreden uzundur.

-   Pivot oyuncuların boyları 1.93 metre ve üzerindedir.

İlk maddedeki yoğunluk nedeniyle bu oyuncuların yaş ve kilolarını da inceledik.

```{r}

# Veri setini yükleme
veri <- read.csv(file = "NBA_Dataset_yeni.csv", header = TRUE, sep = ",")

# veriyi BLK sütununa göre sıralama
blok_data <- veri[order(veri$BLK, decreasing = TRUE),]

# BLK sütununa göre sıralanan veriyi alma
blok_top <- blok_data[1:572,]
BlokAnaliz <- subset(blok_top, select = c("Player", "BLK", "Height","MP","Weight"))
colnames(BlokAnaliz) <- c("oyuncu", "blok", "boy","süre","kilo")



# MP'ye göre filtreleme yapalım
filtreli_veri <- veri %>%
  filter(MP > 20)
  
  # Boya göre filtreleme yapalım
filtreli_veri2 <- filter(veri, Height >= 1.95 & Height <= 2.05)

# Filtrelenmiş veriyi ekrana yazdırın
print(filtreli_veri)

# Ortalama blok hesaplama
ortalama_blok <- mean(filtreli_veri$BLK)

# ggplot2 kütüphanesini yükleme
library(ggplot2)

# Scatterplot çizimi
ggplot(filtreli_veri2, aes(x = Weight, y = BLK, color=Pos)) +
  geom_point() +
  geom_abline(intercept = ortalama_blok, slope = 0, linetype = "dashed", color = "blue") +
  labs(title = "Blok Sayısı ve Kilo Arasındaki İlişki",
       x = "Kilo",
       y = "Blok Sayısı") +
  theme_minimal()


```

Bu analizde NBA oyuncularından 20 dakikadan fazla oyunda kalmış ve boyu 1.95 ile 2.05 arasında olan oyuncuların Block başarılarının kilo ile ilgisi analiz edilmiştir. Renkler pozisyonları göstermektedir.

Kilo ile Blok sayısı arasındaki bağlantıyı grafik üzerinden değerlendirdiğimizde

-   Ortalama blok sayısının üzerinde blok başarısı elde eden oyuncuların 80-115 kg arasındadır.

-   Bir oyuncu 120 kilonun üzerinde olmasına rağmen ortalamanın üzerindedir

-   Merkez oyuncular 78 ile 100 kg arasındadır.

## Asist - YaE

## Asist/Top kaybD1 - YaE

. . .

## KeEifsel Veri Analizi

KeEifsel veri analizi, veri setlerini inceleyerek iC'erdikleri bilgiyi anlamak ve veri hakkD1nda sezgisel bir anlayD1E geliEtirmek iC'in kullanD1lan bir sC\<reC'tir. Bu sC\<reC', veri setlerinin yapD1larD1nD1, eDilimlerini, iliEkilerini ve desenlerini keEfetmeyi amaC'lar.

Projeye baElamadan C6nce inelediDimiz veri setleri hakkD1nda bazD1 beklentilerimiz vardD1. Mesela boyu uzun olan oyuncularD1n rebound ortalamasD1 daha yC\<ksek olmalD1ydD1. Alt baElD1klarD1 bu beklentilerimiz C\<zerine oluEturduk. Beklentimizi kanD1tlamak bir amaC'ken bir yandan da bu beklentilerimizi EaED1rtacak C'eEitli oyuncular olacaDD1nD1n farkD1ndaydD1k. Ne de olsa NBA :) Bu da bizlere outlierslarD1 gC6sterecekti.

Veri keEfi ve gC6zlemi yaptD1ktan sonra kullanacaDD1mD1z veri setlerini bulup incelemeye baEladD1k. Proje iC'in inceleyeceDimiz hedef kitlemizi belirledik ( 23-24 Sezonu, en iyi ilk 50 oyuncu ).

SonrasD1nda Veri gC6rselleEtirme ile veriyi daha okunur kD1lmaya C'alD1EtD1k.Bunun iC'in incelediDimiz veriye gC6re C'eEitli plotlar seC'meliydik. En optimum plotu seC'meye gayret gC6sterdik. (Modelleme C6ncesi analiz)

KeEifsel modelleme C\<zerinde C'ok zaman kaybetmedik. CC\<nkC\< R studio veri iC'in en optimum yani en uygun plotu seC'enek olarak sundu.

Daha sonrasD1nda sonuC'larD1 ilgili baElD1klarD1n altD1nda paylaEtD1k.

## Trend Analizi

/chatgptden baktD1m bunu uygularken tekrar konusalD1m/ Trend analizi, belirli bir zaman dilimindeki veri setlerindeki uzun vadeli eDilimleri belirlemek iC'in kullanD1lan bir analiz yC6ntemidir. Bu analiz, veri setindeki deDiEkenlerin zamanla nasD1l deDiEtiDini inceleyerek gelecekteki davranD1Elar hakkD1nda tahminler yapmaya yardD1mcD1 olur.

Trend analizinde genellikle zaman serisi verileri kullanD1lD1r. Temel olarak, zaman serisi verileri, belirli bir zaman diliminde belirli aralD1klarla C6lC'C\<len veya gC6zlenen verilerdir (C6rneDin, aylD1k satD1E rakamlarD1, gC\<nlC\<k hisse senedi fiyatlarD1). Bu veriler, bir trendin varlD1DD1nD1 ve bu trendin ne yC6nde olduDunu belirlemek iC'in analiz edilir.

Trend analizi genellikle Eu adD1mlarD1 iC'erir:

Veri GC6rselleEtirme: Zaman serisi verileri grafiDe dC6kC\<lC\<r. Bu, verinin nasD1l davrandD1DD1nD1 gC6rsel olarak gC6rmemize olanak tanD1r. Grafik C\<zerinde belirli bir eDilim olduDu gC6zlemlenebilir. Trendin Belirlenmesi: Veri setindeki eDilimin ne olduDunu belirlemek iC'in C'eEitli istatistiksel yC6ntemler kullanD1lD1r. Bu, veri setindeki deDiEkenliDin sabit bir eDilimle artD1p artmadD1DD1nD1 veya azaldD1DD1nD1 belirler. Trendin Uygun Modellemesi: Veri setinin yapD1sD1na ve belirlenen trende baDlD1 olarak uygun bir model seC'ilir. DoDrusal, C\<stel veya polinomiyal trendler gibi farklD1 modeller kullanD1labilir. Trendin Tahmin Edilmesi: Belirlenen trend modeli kullanD1larak gelecekteki deDerler tahmin edilir. Bu, trendin devam edip etmeyeceDi veya tersine dC6nC\<p dC6nmediDi hakkD1nda fikir verebilir. Trend analizi, C'eEitli endC\<strilerde pazar trendlerini, tC\<ketici davranD1ElarD1nD1, finansal piyasalarD1 ve daha fazlasD1nD1 anlamak iC'in kullanD1lD1r. CrneDin, bir Eirketin satD1ElarD1nD1 analiz ederek gelecekteki satD1E trendlerini tahmin etmek veya bir yatD1rD1mcD1nD1n belirli bir hisse senedinin fiyatD1nD1n gelecekteki trendini belirlemek iC'in trend analizi yapD1labilir.

## Model Uydurma

chtagptden aldD1m bu aEamaya geldD1gD1mD1zde tekrar konusalD1m Model uydurma (fitting), istatistik ve makine C6Drenimi alanlarD1nda bir modelin veriye uyum saDlamasD1 veya veriyi en iyi Eekilde aC'D1klamasD1 anlamD1na gelir. Bu, modelin gC6zlemlenen verilere ne kadar iyi uymakta olduDunu ifade eder.

Model uydurma genellikle Eu adD1mlarD1 iC'erir:

1.  **Model SeC'imi**: D0ncelenen veri seti iC'in uygun bir model seC'ilir. Bu model, veri setinin yapD1sD1na ve hedeflenen sonuca baDlD1 olarak belirlenir. CrneDin, doDrusal regresyon, lojistik regresyon, karar aDaC'larD1, destek vektC6r makineleri gibi C'eEitli modeller arasD1ndan bir seC'im yapD1labilir.

2.  **Model Parametrelerinin Belirlenmesi**: SeC'ilen modelin parametreleri belirlenir veya tahmin edilir. Bu parametreler, modelin veriye ne kadar iyi uyduDunu belirler. BazD1 modellerde bu parametreler manuel olarak ayarlanabilirken, bazD1larD1 otomatik olarak ayarlanD1r.

3.  **Model Uydurma**: Model, veri setine uydurulur. Bu, modelin gC6zlemlenen verilere ne kadar iyi uyduDunu ifade eder. Modelin parametreleri, veri setindeki gC6zlemlenen deDerlerle uyumlu hale getirilir.

4.  **Model DeDerlendirme**: Uydurulan modelin performansD1 deDerlendirilir. Bu, modelin ne kadar iyi olduDunu ve tahmin yeteneDini belirler. DoDruluk, hassasiyet, belirlilik katsayD1sD1 gibi metrikler kullanD1larak deDerlendirme yapD1lD1r.

Model uydurma, veri setindeki desenleri ve iliEkileri aC'D1klamak ve gelecekteki davranD1ElarD1 tahmin etmek iC'in kullanD1lD1r. D0yi bir model, veri setindeki deDiEkenliDi ve yapD1yD1 doDru bir Eekilde yakalar ve bu sayede gelecekteki deDerlerin tahmininde daha doDru sonuC'lar verir. Ancak model uydurma sC\<recinde aED1rD1 uydurma (overfitting) riski de vardD1r, bu da modelin eDitim verilerine C'ok iyi uymasD1 ancak genelleme yapma yeteneDinin azalmasD1 anlamD1na gelir. Bu nedenle, modelin aED1rD1 uydurma yapmamasD1 iC'in dC\<zenleme teknikleri ve doDrulama yC6ntemleri kullanD1lD1r.

## SonuC'lar

Deneme eklemelesidir xxxxxx

# SonuC'lar ve Ana CD1karD1mlar

xxxxxx
